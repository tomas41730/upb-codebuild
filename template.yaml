AWSTemplateFormatVersion : '2010-09-09'
Transform: 
    - AWS::Serverless-2016-10-31

Description: Lambda CloudFormation Lab
Resources:
  # MyLambdaRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: rpp-ip-cluster-lambda-role
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #       - Effect: Allow
  #         Principal:
  #           Service:
  #           - lambda.amazonaws.com
  #         Action:
  #         - sts:AssumeRole
  #     Path: "/"
  #     Policies:
  #     - PolicyName: my-lambda-policy
  #       PolicyDocument:
  #         Version: '2012-10-17'
  #         Statement:
  #         - Effect: Allow
  #           Action:
  #           - logs:CreateLogGroup
  #           - logs:CreateLogStream
  #           - logs:PutLogEvents
  #           Resource: arn:aws:logs:*:*:*
  #         - Effect: Allow
  #           Action:
  #           - dynamodb:GetItem
  #           Resource: arn:aws:dynamodb:*:*:table/users-table
  
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getUser
      Handler: user.getUser
      Runtime: python3.6
      CodeUri: package/
      Policies: 
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable 
      # Role: !GetAtt MyLambdaRole.Arn
      Environment:
        Variables: 
          USERS_TABLE: !Ref UsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/user/{userId}"
            Method: GET
          
          
  PutUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putUser
      Handler: user.putUser
      Runtime: python3.6
      CodeUri: package/
      Policies: 
        - DynamoDBWritePolicy:
            TableName: !Ref UsersTable 
      # Role: !GetAtt MyLambdaRole.Arn
      Environment:
        Variables: 
          USERS_TABLE: !Ref UsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/user/{userId}"
            Method: PUT
          
  
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: users-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
      
    
  UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users-table
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
